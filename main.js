//All exercises are found at https://projecteuler.net/archives

/*Multiples of 3 and 5
Problem 1 
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 
3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.*/

/*var total = 0;

for(i=1; i*3 < 1000; i++){
    total = total + i*3;
}

for(i=1; i*5 < 1000; i++){
    total = total + i*5;
}

console.log(total);*/

/*Even Fibonacci numbers
Problem 2 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four 
million, find the sum of the even-valued terms.*/

/*var fibo = [0, 1]

function findFibo(limit){
    for(let i=1; i <= limit; i++){
        fibo[i+1] = fibo[i] + fibo[i-1];
    }
    return fibo[limit];
}

findFibo(4000000);
//console.log(fibo);

var total = 0;

for(let i = 0; i < fibo.length-2; i++){
    if(fibo[i] % 2 === 0){
        total += fibo[i];
    }
}

console.log(total);  //computer can't handle numbers this large.  considered breaking apart 
//into multipl chunks but decided it's not worth it*/

/*Largest prime factor
Problem 3 
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?*/

/*var primeNums = [1, 2, 3];
var factors = [];
var primeFactors = [];

for(i=4; i < 100; i++){
    let prime = true;
    for(k = 2; k<i; k++){
        if(i % k == 0){
            prime = false;
        }
    }
    if(prime== true){
        primeNums.push(i)
    }
}


function findFactors(target){
    for(i=1; i< 100; i++){
        if(target % i == 0){
            factors.push(i);
        }
    }
}

findFactors(1000);

for(i=0; i < primeNums.length; i++){
    if(factors.includes(primeNums[i])){
        primeFactors.push(primeNums[i]);
    }
}
console.log(primeFactors);

console.log(primeFactors[primeFactors.length -1]);*/

//started ignoring these ridiculous numbers and just using more reasonable ones

/*argest palindrome product
Problem 4 
A palindromic number reads the same both ways. The largest palindrome made from the 
product of two 2-digit numbers is 9009 = 91 × 99.

Find the largest palindrome made from the product of two 3-digit numbers.*/

//gonna do this with 2 digits

/*var limit = 99 * 99;
var lowerLimit = 10 * 10;
var palindromes = [];
var palindromeFactors = [];

function checkPal(target){
    let string = target.toString();
    if(string.length % 2 == 0){
        let part1 = string.substr(0, string.length/2);
        let part2 = string.substr(string.length/2, string.length);
        let newPart2 = "";
        for(k=part2.length-1; k>-1; k--){
            newPart2 += part2.charAt(k);
        }
        if (part1 == newPart2){
            return true;
        } else {
            return false;
        }
    } else {
        let part1 = string.substr(0, (string.length-1)/2);
        let part2 = string.substr(((string.length-1)/2)+1, string.length);
        let newPart2 = "";
        for(k=part2.length-1; k>-1; k--){
            newPart2 += part2.charAt(k);
        }
        if (part1 == newPart2){
            return true;
        } else {
            return false;
        }

    }
}

for(i = lowerLimit; i < limit; i ++){
    if(checkPal(i) == true){
        palindromes.push(i);
    }
}

for(i = 10; i < 100; i++){
    for(k = 10; k < 100; k++){
        if(palindromes.includes(i*k) && palindromeFactors.includes(i*k) == false){
            palindromeFactors.push(i*k);
        }
    }
}
palindromeFactors.sort(function(a, b){return a - b});
console.log(palindromeFactors[palindromeFactors.length-1]);*/

/*Smallest multiple
Problem 5 
2520 is the smallest number that can be divided by each of the numbers from 1 to 10 
without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers 
from 1 to 20?*/

/*var result = false;
var resultChecker = 1;
var smallest = 0;

while(result == false){
    for(i=resultChecker; i < resultChecker+1; i++){
        let counter = 0;
        for(k=1; k < 11; k++){
            if(i % k == 0){
                counter++;
            }
            if(counter == 10){
                smallest=i;
                result = true;
            }
        }
    }
    resultChecker += 1;
}

console.log(smallest);*/

/*Sum square difference
Problem 6 
The sum of the squares of the first ten natural numbers is,

12 + 22 + ... + 102 = 385
The square of the sum of the first ten natural numbers is,

(1 + 2 + ... + 10)2 = 552 = 3025
Hence the difference between the sum of the squares of the first ten natural numbers 
and the square of the sum is 3025 − 385 = 2640.

Find the difference between the sum of the squares of the first one hundred natural 
numbers and the square of the sum.*/

/*var squareSum = 0;
var sumSquare = 0;
var sum = 0;
var difference = 0;

for(i=1; i < 11; i++){
    let square = i*i;
    squareSum += square;
    console.log(squareSum);
}

for(i=1; i < 11; i++){
    sum += i;
}

sumSquare = sum * sum;

difference = sumSquare - squareSum;

console.log(difference);*/

/*10001st prime
Problem 7 
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

What is the 10 001st prime number?*/

/*var primeNums = [];
var counter = 1000;

for(i=1; counter > 0; i++){
    let prime = true;
    for(k = 2; k<i; k++){
        if(i % k == 0){
            prime = false;
        }
    }
    if(prime== true){
        primeNums.push(i);
        counter--;
    }
}

console.log(primeNums[999]);*/